<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Off Requests</title>
    <link rel="stylesheet" type="text/css" href="css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        button {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <?php 
        // Establish database connection
        $servername = "localhost";
        $username = "root";
        $password = "";
        $dbname = "littlesun";

        $conn = new mysqli($servername, $username, $password, $dbname);

        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Retrieve all time off requests from the database
        $stmt = $conn->prepare("SELECT timeoff.*, users.firstname, users.lastname 
        FROM timeoff 
        JOIN users ON timeoff.UserID = users.id 
        JOIN user_location ON users.id = user_location.user_id");
$stmt->execute();

        $result = $stmt->get_result();
    ?>

    <div class="sidebar">
        <?php include 'sidebar.php'; ?>
    </div>
    <div class="container">
        <h1>Time Off Requests</h1>
        <?php if ($result->num_rows > 0): ?>
            <table>
                <tr>
                    <th>User</th>
                    <th>Timeoff Reason</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
                <?php while ($row = $result->fetch_assoc()): ?>
                    <tr>
                        <td><?= htmlspecialchars($row['firstname'] . ' ' . $row['lastname']) ?></td>
                        <td><?= htmlspecialchars($row['Timeoff_reason']) ?></td>
                        <td><?= htmlspecialchars($row['Start_date']) ?></td>
                        <td><?= htmlspecialchars($row['End_date']) ?></td>
                        <td><?= htmlspecialchars($row['Start_time']) ?></td>
                        <td><?= htmlspecialchars($row['End_time']) ?></td>
                        <td><?= htmlspecialchars($row['Status']) ?></td>
                        <td>
                            <form action="<?= htmlspecialchars($_SERVER['PHP_SELF']) ?>" method="POST">
                                <input type="hidden" name="request_id" value="<?= htmlspecialchars($row['ID']) ?>">
                                <button type="submit" name="action" value="accept">Accept</button>
                                <button type="submit" name="action" value="deny">Deny</button>
                            </form>
                        </td>
                    </tr>
                <?php endwhile; ?>
            </table>
        <?php else: ?>
            <p>No time off requests found.</p>
        <?php endif; ?>
    </div>
</body>
</html>







<?php
require_once './classes/Task.class.php'; 
require_once './classes/db.class.php';
require_once './classes/Session.class.php';
require_once './classes/User.class.php';

$email = Session::getSession('email');

// Instantiate DB class
$conn = $db->getConnection();

$user = new User($conn);
$user_role = $user->getUserRole($email);
Session::setSession('firstname', $user->getFirstName($email));

include 'sidebar.php';

// Fetch tasks and time slots from the database
$sql = "SELECT UserTasks.UserTaskID, UserTasks.UserID, UserTasks.TaskID, users.firstname, users.lastname, tasks.TaskName, time_slots.StartSlot, time_slots.EndSlot, time_slots.Date, time_slots.Sick
        FROM UserTasks 
        INNER JOIN users ON UserTasks.UserID = users.id 
        INNER JOIN tasks ON UserTasks.TaskID = tasks.TaskID 
        INNER JOIN time_slots ON UserTasks.UserID = time_slots.UserID AND UserTasks.TaskID = time_slots.TaskID
        WHERE time_slots.Sick = 0"; // Only select time slots that are not marked as sick
$result = $conn->query($sql);

// Initialize an associative array to store tasks and time slots by date
$tasks_and_slots = array();

if ($result) {
    // Fetch and organize tasks and time slots by date
    while ($row = $result->fetch_assoc()) {
        $date = $row['Date']; // Use the date from time_slots
        $tasks_and_slots[$date][] = $row;
    }
}

// Function to display tasks and time slots for a specific date
function displayTasksAndSlots($date, $tasks_and_slots) {
    // Check if there are any tasks and time slots for the given date
    if (isset($tasks_and_slots[$date])) {
        // Loop through tasks and time slots for the date
        foreach ($tasks_and_slots[$date] as $task_slot) {
            echo "<div class='task'>";
            echo "<strong>{$task_slot['TaskName']}</strong><br>";
            echo "{$task_slot['StartSlot']} - {$task_slot['EndSlot']}<br>";
            echo "{$task_slot['firstname']} {$task_slot['lastname']}";
            echo "</div>";
        }
    }
}

// Establish database connection
$view = isset($_GET['view']) ? $_GET['view'] : 'month';

// Get the current week and year
$current_week = isset($_GET['week']) ? intval($_GET['week']) : date('W');
$year = date('Y');

// Calculate the start and end date of the selected week
$week_start = new DateTime();
$week_start->setISODate($year, $current_week);
$week_end = clone $week_start;
$week_end->modify('+6 days');

$week_start_date = $week_start->format('Y-m-d');
$week_end_date = $week_end->format('Y-m-d');

// Get the current month and year
$month = isset($_GET['month']) ? intval($_GET['month']) : date('n');
$year = isset($_GET['year']) ? intval($_GET['year']) : date('Y');

// Get the number of days in the month and the first day of the month
$numDays = cal_days_in_month(CAL_GREGORIAN, $month, $year);
$firstDay = date("N", strtotime("$year-$month-01"));

// Get the selected day for the daily view
$selected_day = isset($_GET['day']) ? $_GET['day'] : date('Y-m-d');

// Ensure $selected_day is a valid date
if (!strtotime($selected_day)) {
    // If $selected_day is not a valid date, set it to the current date
    $selected_day = date('Y-m-d');
}

// Fetch user days off from the database
$days_off = array();
$sql_days_off = "SELECT user_id, date_off FROM user_days_off";
$result_days_off = $conn->query($sql_days_off);

if ($result_days_off) {
    while ($row = $result_days_off->fetch_assoc()) {
        $days_off[$row['user_id']][] = $row['date_off'];
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Task Calendar</title>
<link rel="stylesheet" href="css/style.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

</head>
<body>
    
<div class="container">
<h2>
<?php 
     if ($view === 'week') {
         echo "Week $current_week";
     } elseif ($view === 'day') {
         echo "Day " . date('D, F j, Y', strtotime($selected_day));
     } else {
         echo date('F Y', mktime(0, 0, 0, $month, 1, $year));
     }
     ?>
</h2><div class="navigation">
<button class="view-button" onclick="window.location.href='?view=month'">Month View</button>
<button class="view-button"onclick="window.location.href='?view=week'">Week View</button>
<button class="view-button" onclick="window.location.href='?view=day'">Day View</button>

<?php if ($view === 'month'): ?>
    <button class="view-button" onclick="window.location.href='?view=month&year=<?php echo $year; ?>&month=<?php echo $month - 1; ?>'">Previous Month</button>
    <button class="view-button" onclick="window.location.href='?view=month&year=<?php echo $year; ?>&month=<?php echo $month + 1; ?>'">Next Month</button>
<?php endif; ?>

<?php if ($view === 'week'): ?>
    <button class="view-button" onclick="window.location.href='?view=week&week=<?php echo $current_week - 1; ?>'">Previous Week</button>
    <button class="view-button" onclick="window.location.href='?view=week&week=<?php echo $current_week + 1; ?>'">Next Week</button>
<?php endif; ?>

<?php if ($view === 'day'): ?>
    <button class="view-button" onclick="window.location.href='?view=day&day=<?php echo date('Y-m-d', strtotime("-1 day", strtotime($selected_day))); ?>'">Previous Day</button>
    <button class="view-button" onclick="window.location.href='?view=day&day=<?php echo date('Y-m-d', strtotime("+1 day", strtotime($selected_day))); ?>'">Next Day</button>
<?php endif; ?>


</div>
<?php if ($view === 'month' || !isset($view)): ?>
<!-- Monthly View -->
<!-- Monthly View -->
<div class="monthly-view">

    <div class="calendar">
        <!-- Calendar grid for the month -->
        <div class="calendar-header">
            <!-- Header containing month and year -->
            <?php echo date('F Y', mktime(0, 0, 0, $month, 1, $year)); ?>
        </div>
        <!-- Days of the week headers -->
        <div class="day-header">Sun</div>
        <div class="day-header">Mon</div>
        <div class="day-header">Tue</div>
        <div class="day-header">Wed</div>
        <div class="day-header">Thu</div>
        <div class="day-header">Fri</div>
        <div class="day-header">Sat</div>
        <!-- Loop through each day of the month -->
        <?php
        for ($i = 1; $i <= $numDays; $i++) {
            $date = date("Y-m-d", strtotime("$year-$month-$i"));
            // Calculate the day of the week for the current day
            $dayOfWeek = date('N', strtotime("$year-$month-$i"));
            // Add empty cells for days before the first day of the month
            if ($i === 1 && $dayOfWeek !== 7) {
                for ($j = 0; $j < $dayOfWeek; $j++) {
                    echo "<div class='empty-cell'></div>";
                }
            }
            // Add the day cell
            echo "<div class='day-cell'>$i";
            // Display tasks and time slots for the current day
            displayTasksAndSlots($date, $tasks_and_slots);
            echo "</div>";
            // If the last day of the week, close the row
            if ($dayOfWeek === 7 || $i === $numDays) {
                // If it's the last day of the month and not Saturday, add empty cells
                if ($i === $numDays && $dayOfWeek !== 6) {
                    for ($j = $dayOfWeek; $j < 6; $j++) {
                        echo "<div class='empty-cell'></div>";
                    }
                }
                echo "</div>"; // Close the row
                // If not the last day of the month, start a new row
                if ($i !== $numDays) {
                    echo "<div class='calendar-row'>";
                }
            }
        }
        ?>
    </div>
</div>

<?php elseif ($view === 'week'): ?>
        <!-- Weekly View -->
       <!-- Weekly View -->
<div class="weekly-view">
    <div class="weekly-calendar">
        <!-- Loop through each day of the week -->
        <?php
        for ($i = 0; $i < 7; $i++) {
            // Calculate the date for the current day
            $current_day = date('Y-m-d', strtotime("+$i days", strtotime("Monday this week", strtotime("now"))));
        ?>
            <div class="day">
                <h4><?php echo date('D', strtotime($current_day)); ?></h4>
                <!-- Display tasks and time slots for the current day -->
                <?php
                displayTasksAndSlots($current_day, $tasks_and_slots);
                ?>
            </div>
        <?php
        }
        ?>
    </div>
</div>

<?php else: ?>
    <!-- Daily View -->
    <!-- Daily View -->
<div class="daily-view">
    <!-- Display tasks and time slots for the selected day -->
    <h2><?php echo date('D, F j, Y', strtotime($selected_day)); ?></h2>
    <?php
    displayTasksAndSlots($selected_day, $tasks_and_slots);
    ?>
</div>

<?php endif; ?>
</div>
</body>
</html>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <title>User Tasks and Time Slots</title>
</head>
<body>
<div class="container">
    <?php
    require_once "config.php";
    require_once './classes/Task.class.php'; // Include the TaskManager class
    include 'sidebar.php';

    class UserTask {
        private $conn;

        public function __construct($conn) {
            $this->conn = $conn;
        }

        public function getUserTasksAndTimeSlots($user_id) {
            $sql = "SELECT 
                        time_slots.TimeSlotID, 
                        tasks.TaskName, 
                        time_slots.StartSlot, 
                        time_slots.EndSlot, 
                        time_slots.Date, 
                        time_slots.Sick
                    FROM 
                        UserTasks
                    INNER JOIN 
                        tasks ON UserTasks.TaskID = tasks.TaskID
                    INNER JOIN 
                        time_slots ON UserTasks.TaskID = time_slots.TaskID
                    WHERE 
                        UserTasks.UserID = ? 
                        AND time_slots.UserID = ? 
                        AND time_slots.Sick = 0";
            $stmt = $this->conn->prepare($sql);
            $stmt->bind_param("ii", $user_id, $user_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                echo "<h3>Your Tasks and Time Slots:</h3>";
                echo "<table border='1'>";
                echo "<tr><th>Task Name</th><th>Start Time</th><th>End Time</th><th>Date</th><th>Sick</th><th>Action</th></tr>";
                while ($row = $result->fetch_assoc()) {
                    echo "<tr>";
                    echo "<td>" . htmlspecialchars($row["TaskName"]) . "</td>";
                    echo "<td>" . htmlspecialchars($row["StartSlot"]) . "</td>";
                    echo "<td>" . htmlspecialchars($row["EndSlot"]) . "</td>";
                    echo "<td>" . htmlspecialchars($row["Date"]) . "</td>";
                    echo "<td>" . ($row["Sick"] ? "Yes" : "No") . "</td>";
                    echo "<td>
                            <form method='POST' action=''>
                                <input type='hidden' name='timeslot_id' value='" . $row['TimeSlotID'] . "'>
                                <button class='view-buttom' type='submit' name='mark_sick'>Mark as Sick</button>
                            </form>
                          </td>";
                    echo "</tr>";
                }
                echo "</table>";
            } else {
                echo "No tasks and time slots found for this user.";
            }
        }

        public function setSick($timeslot_id) {
            $sql = "UPDATE time_slots SET Sick = 1 WHERE TimeSlotID = ?";
            $stmt = $this->conn->prepare($sql);
            $stmt->bind_param("i", $timeslot_id);
            if ($stmt->execute()) {
                echo "The selected time slot has been marked as sick.";
            } else {
                echo "Error: " . $this->conn->error;
            }
        }

        public function setSickForDay($user_id, $date) {
            $sql = "UPDATE time_slots SET Sick = 1 WHERE UserID = ? AND Date = ?";
            $stmt = $this->conn->prepare($sql);
            $stmt->bind_param("is", $user_id, $date);
            if ($stmt->execute()) {
                echo "All time slots for $date have been marked as sick.";
            } else {
                echo "Error: " . $this->conn->error;
            }
        }
    }

    if (isset($_SESSION['user_id'])) {
        $user_id = $_SESSION['user_id'];
        $userTasks = new UserTask($conn);

        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            if (isset($_POST['mark_sick'])) {
                $timeslot_id = intval($_POST['timeslot_id']);
                $userTasks->setSick($timeslot_id);
            }

            if (isset($_POST['mark_sick_day'])) {
                $date = $_POST['date'];
                $userTasks->setSickForDay($user_id, $date);
            }
        }

        // Form to mark all time slots for a specific day as sick
        echo "<h2>Mark All Time Slots for a Day as Sick:</h2>";
        echo "<form method='POST' action=''>
                <label for='date'>Date:</label>
                <input type='date' name='date' required>
                <button class='view-button' type='submit' name='mark_sick_day'>Mark as Sick for the Whole Day</button>
              </form>";
        

        $userTasks->getUserTasksAndTimeSlots($user_id);
    } else {
        echo "You are not logged in!";
    }

    $conn->close();
    ?>
</div>
</body>
</html>
